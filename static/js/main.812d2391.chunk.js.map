{"version":3,"sources":["components/addItem.js","components/announsementList.js","components/editItem.js","components/announcement.js","components/searchPage.js","App.js","reportWebVitals.js","index.js"],"names":["AddItem","props","handleTextChange","e","setState","target","name","value","handleSubmit","state","title","description","idItem","uuidv4","data","push","id","time","Date","localStorage","setItem","JSON","stringify","window","location","reload","trigger","className","modal","position","close","class","onChange","type","placeholder","rows","data-dismiss","onClick","bind","Component","AnnoucementList","announcements","parse","getItem","searchTitle","this","splice","to","map","announcement","handleDelete","indexOf","EditItem","forEach","item","onFocus","getData","Announcement","index","findSimilarAnnouncements","match","params","announcement_id","indexItem","targetAnnouncement","targetTitleWords","split","targetDescriptionWords","filter","titleWords","descriptionWords","isTitleSimilar","some","word","includes","isDescriptionSimilar","similartList","similarShow","replace","SearchPage","getSearchData","input","searchItem","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.812d2391.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class AddItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            description: '',\r\n        }\r\n    }\r\n\r\n    handleTextChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    handleSubmit = (e) => {\r\n        if (this.state.title && this.state.description) {\r\n            const idItem = uuidv4();\r\n            let data = this.props.data;\r\n            data.push({\r\n                id: idItem,\r\n                title: this.state.title,\r\n                description: this.state.description,\r\n                time: new Date()\r\n            })\r\n            localStorage.setItem('data', JSON.stringify(data));\r\n            this.setState({ title: '', description: '' });\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Popup trigger={<button className='btn btn-info'>Add new announcement </button>} modal position='bottom center'>\r\n                {close =>\r\n                    <div class=\"modal-dialog modal-lg shadow-lg\">\r\n                        <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                                <h4 class=\"modal-title\">Add new announcement</h4>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n                                <input className=\"form-control\" onChange={this.handleTextChange} value={this.state.title} type=\"text\" name=\"title\" placeholder=\"Title\" /><br></br>\r\n                                <textarea className=\"form-control\" onChange={this.handleTextChange} value={this.props.description} name=\"description\" placeholder=\"Description\" rows='15' />\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\" onClick={this.handleSubmit.bind(this)}>Save</button>\r\n                                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\" onClick={() => { close(); }}>Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n            </Popup>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport AddItem from \"./addItem\";\r\n\r\n\r\n\r\nexport default class AnnoucementList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            announcements: JSON.parse(localStorage.getItem(\"data\")) || [],\r\n            searchTitle: ''\r\n        };\r\n\r\n    }\r\n    handleDelete(id) {\r\n        let data = this.state.announcements;\r\n        data.splice(id, 1);\r\n        this.setState(state => ({\r\n            announcements: data\r\n        }))\r\n        localStorage.setItem(\"data\", JSON.stringify(data));\r\n\r\n    }\r\n    handleTextChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n    render() {\r\n        const announcements = this.state.announcements\r\n        let announcementList = ' '\r\n        return (\r\n            <div>\r\n                <div className='d-flex flex-row justify-content-between w-75 my-3 mx-auto'>\r\n                    <div className=\"d-flex flex-row\">\r\n                        <input className=\"form-control\" onChange={this.handleTextChange} value={this.state.searchTitle} type=\"text\" name=\"searchTitle\" placeholder=\"Title\" />\r\n                        <Link to={'/search/' + this.state.searchTitle}><button className='btn btn-info '>Search</button></Link>\r\n                    </div>\r\n                    <AddItem data={announcements} />\r\n                </div>\r\n                <div>\r\n                    <h1 className='text-info w-75 mx-auto'>List of announcement</h1>\r\n                    {\r\n                        announcementList = announcements.map(announcement => {\r\n                            return (\r\n                                <div className=\"card d-flex flex-row justify-content-between w-75 my-2 mx-auto shadow-lg\" key={announcement.id}>\r\n                                    <Link to={'/announcement/' + announcement.id}><div className=\"card-body\" >\r\n                                        <h2 className=\"card-title \">{announcement.title}</h2>\r\n                                    </div>\r\n                                    </Link>\r\n                                    <div className=\" float-right\">\r\n                                        <button className=\"btn btn-info float-right\" onClick={this.handleDelete.bind(this, announcements.indexOf(announcement))}><i className=\"fas fa-trash\"></i></button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nexport default class EditItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const data = JSON.parse(localStorage.getItem('data'));\r\n        this.state = {\r\n            data: data,\r\n            title: \"\",\r\n            description: '',\r\n        }\r\n    }\r\n\r\n    handleTextChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    handleSubmit = (e) => {\r\n        if (this.state.title && this.state.description) {\r\n            const data = JSON.parse(localStorage.getItem(\"data\"));\r\n            data.forEach(item => {\r\n                if (item.id === this.props.id) {\r\n                    item.title = this.state.title;\r\n                    item.description = this.state.description;\r\n                    return item;\r\n                }\r\n            })\r\n            localStorage.setItem('data', JSON.stringify(data));\r\n            window.location.reload();\r\n        }\r\n    }\r\n    getData() {\r\n        this.setState(state => ({\r\n            title: this.props.title,\r\n            description: this.props.description,\r\n        }))\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Popup trigger={<button className='btn btn-info' > Edit announcement </button>} modal position='bottom center'>\r\n                {close =>\r\n                    <div class=\"modal-dialog modal-lg shadow-lg\">\r\n                        <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                                <h4 class=\"modal-title\">Edit announcement</h4>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n                                <input className=\"form-control\" onChange={this.handleTextChange} onFocus={this.getData.bind(this)} value={this.state.title} type=\"text\" name=\"title\" placeholder=\"Title\" /><br></br>\r\n                                <textarea className=\"form-control\" onChange={this.handleTextChange} value={this.state.description} name=\"description\" placeholder=\"Description\" rows='15' />\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\" onClick={this.handleSubmit.bind(this)}>Save</button>\r\n                                <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\" onClick={() => { close(); }}>Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </Popup>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport EditItem from \"./editItem\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default class Announcement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            title: '',\r\n            description: '',\r\n            time: '',\r\n            index: '',\r\n            announcement: null,\r\n        };\r\n        this.getData = this.getData.bind(this);\r\n        this.findSimilarAnnouncements = this.findSimilarAnnouncements.bind(this);\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n    getData() {\r\n        const data = JSON.parse(localStorage.getItem(\"data\"));\r\n        let id = this.props.match.params.announcement_id;\r\n        data.map(item => {\r\n            if (item.id === id) {\r\n                const indexItem = data.indexOf(item)\r\n                this.setState(state => ({\r\n                    id: item.id,\r\n                    title: item.title,\r\n                    description: item.description,\r\n                    time: item.time,\r\n                    index: indexItem,\r\n                    announcement: item\r\n                }))\r\n            }\r\n        })\r\n    }\r\n    findSimilarAnnouncements(announcements, targetAnnouncement) {\r\n        const targetTitleWords = targetAnnouncement.title.split(' ');\r\n        const targetDescriptionWords = targetAnnouncement.description.split(' ');\r\n\r\n        return announcements.filter(({ title, description }) => {\r\n            const titleWords = title.split(' ');\r\n            const descriptionWords = description.split(' ');\r\n\r\n            const isTitleSimilar = targetTitleWords\r\n                .some(word => titleWords.includes(word));\r\n            const isDescriptionSimilar = targetDescriptionWords\r\n                .some(word => descriptionWords.includes(word));\r\n\r\n            return isTitleSimilar && isDescriptionSimilar;\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        const data = JSON.parse(localStorage.getItem(\"data\"));\r\n        const target = this.state.announcement\r\n        if (target) { var similartList = this.findSimilarAnnouncements(data, target) }\r\n        if (similartList) {\r\n            var similarShow = similartList.map(announcement => {\r\n                if (announcement.id !== this.state.id) {\r\n                    return (\r\n                        <div className=\"card d-flex flex-row justify-content-between my-2 mx-auto shadow-lg\" key={announcement.id}>\r\n                            <Link to={'/announcement/' + announcement.id}><div className=\"card-body\" >\r\n                                <h2 className=\"card-title \">{announcement.title}</h2>\r\n                            </div>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <div class=\"card w-75 my-5 mx-auto shadow-lg\" >\r\n                    <div class=\"card-body\" key={this.state.id}>\r\n                        <h4 class=\"card-title\">{this.state.title}</h4>\r\n                        <p class=\"card-text text-black-50\">{this.state.time\r\n                            .replace(\"-\", \"/\")\r\n                            .split(\"T\")[0]\r\n                            .replace(\"-\", \"/\")}</p>\r\n                        <p class=\"card-text\">{this.state.description}</p>\r\n                    </div>\r\n                    <div>\r\n                        <Link to={'/'}><button class=\"btn btn-info mx-4 my-3\">Main Page</button></Link>\r\n                        <EditItem title={this.state.title} description={this.state.description} id={this.state.id} index={this.state.index} />\r\n                    </div>\r\n                </div>\r\n                <div className='w-75 my-3 mx-auto'>\r\n                    <h2 className='text-info'>Similar announcement</h2>\r\n                    {similarShow}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default class SearchPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            announcements: [],\r\n        };\r\n        this.getSearchData = this.getSearchData.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSearchData();\r\n    }\r\n\r\n    getSearchData() {\r\n        const data = JSON.parse(localStorage.getItem(\"data\"));\r\n        let title = this.props.match.params.input;\r\n        let searchItem = []\r\n        data.map(item => {\r\n            let include = item.title.split(' ').includes(title)\r\n            if (include) {\r\n                searchItem.push(item)\r\n            }\r\n        })\r\n        this.setState(state => ({\r\n            announcements: searchItem\r\n        }))\r\n    }\r\n\r\n    handleDelete(id) {\r\n        let data = this.state.announcements;\r\n        data.splice(id, 1);\r\n        this.setState(state => ({\r\n            announcements: data\r\n        }))\r\n        localStorage.setItem(\"data\", JSON.stringify(data));\r\n\r\n    }\r\n    render() {\r\n        let announcements = this.state.announcements\r\n        let announcementList = ' '\r\n        return (\r\n            <div>\r\n                <div className='d-flex flex-row justify-content-between w-75 my-3 mx-auto'>\r\n                    <h2 className='text-info'>Your search results for: \"{this.props.match.params.input}\"</h2>\r\n                    <Link to={\"/\"}><button class=\"btn btn-info\">Main Page</button></Link>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        announcementList = announcements.map(announcement => {\r\n                            return (\r\n                                <div class=\"card d-flex flex-row justify-content-between w-75 my-2 mx-auto shadow-lg\">\r\n                                    <Link to={'/announcement/' + announcement.id}><div class=\"card-body\" key={announcement.id}>\r\n                                        <h2 class=\"card-title text-decoration-none\">{announcement.title}</h2>\r\n                                    </div>\r\n                                    </Link>\r\n                                    <div class=\" float-right\">\r\n                                        <button class=\"btn btn-info float-right\" onClick={this.handleDelete.bind(this, announcements.indexOf(announcement))}><i class=\"fas fa-trash\"></i></button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import { Route, BrowserRouter, Switch } from 'react-router-dom'\nimport AnnoucementList from './components/announsementList'\nimport Announcement from './components/announcement'\nimport SearchPage from './components/searchPage'\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter >\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/' component={AnnoucementList} />\n          <Route path='/announcement/:announcement_id' component={Announcement} />\n          <Route path='/search/:input' component={SearchPage} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}